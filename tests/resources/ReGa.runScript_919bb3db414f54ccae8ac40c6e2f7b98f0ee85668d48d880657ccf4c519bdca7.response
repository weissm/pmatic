{"error": null, "result": "system.describe {\r\n  LEVEL NONE\r\n  SCRIPT_FILE system/describe.tcl\r\n  INFO {Liefert eine detailierte Beschreibung der HomeMatic JSON API.}\r\n  ARGUMENTS {}\r\n}\r\n\r\nsystem.listMethods {\r\n  LEVEL NONE\r\n  SCRIPT_FILE system/listmethods.tcl\r\n  INFO {Liefert eine Liste der verf\u00fcgbaren Methoden}\r\n  ARGUMENTS {}\r\n}\r\n\r\nsystem.methodHelp {\r\n  LEVEL NONE\r\n  SCRIPT_FILE system/methodhelp.tcl\r\n  INFO  {Liefert die Kurzbeschreibung einer Methode}\r\n  ARGUMENTS {name}\r\n}\r\nsystem.saveObjectModel {\r\n  LEVEL NONE\r\n  SCRIPT_FILE system/saveobjectmodel.tcl\r\n  INFO  {Speichert das Object Model}\r\n  ARGUMENTS {}\r\n}\r\n\r\nsystem.getPositionData {\r\n  LEVEL USER\r\n  SCRIPT_FILE system/getpositiondata.tcl\r\n  INFO  {Gibt die gespreicherten Positionsdaten Longitude und Latitude zur\u00fcck}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nsystem.getEnergyPrice {\r\n  LEVEL NONE\r\n  SCRIPT_FILE system/getenergyprice.tcl\r\n  INFO  {Ermittelt den Preis einer KW/h}\r\n  ARGUMENTS {}\r\n}\r\n\r\nInterface.activateLinkParamset {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE  interface/activatelinkparamset.tcl\r\n  INFO {Aktiviert ein Link-Parameterset}\r\n  ARGUMENTS {_session_id_ interface address peerAddress longPress}\r\n}\r\n\r\nInterface.addDevice {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/adddevice.tcl\r\n  INFO {Lernt ein Ger\u00e4t anhand seiner Seriennummer an}\r\n  ARGUMENTS {_session_id_ interface serialNumber}\r\n}\r\n\r\nInterface.addLink {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/addlink.tcl\r\n  INFO {Erstellt eine direkte Verkn\u00fcpfung}\r\n  ARGUMENTS {_session_id_ interface sender receiver name description}\r\n}\r\n\r\nInterface.changeKey {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/changekey.tcl\r\n  INFO {\u00c4ndert den AES-Schl\u00fcssel}\r\n  ARGUMENTS {_session_id_ interface passphrase}\r\n}\r\n\r\nInterface.clearConfigCache {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/clearconfigcache.tcl\r\n  INFO {L\u00f6scht die auf der HomeMatic Zentrale gespeicherten Konfigurationsdaten f\u00fcr ein Ger\u00e4t}\r\n  ARGUMENTS {_session_id_ interface address}\r\n}\r\n\r\nInterface.deleteDevice {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/deletedevice.tcl\r\n  INFO {L\u00f6scht ein Ger\u00e4t}\r\n  ARGUMENTS {_session_id_ interface address flags}\r\n}\r\n\r\nInterface.determineParameter {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/determineparameter.tcl\r\n  INFO {Bestimmt den Wert eines Patameters}\r\n  ARGUMENTS {_session_id_ interface address paramsetKey parameterId}\r\n}\r\n\r\nInterface.getDeviceDescription {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getdevicedescription.tcl\r\n  INFO {Liefert die Beschreibung eines Ger\u00e4ts}\r\n  ARGUMENTS {_session_id_ interface address}\r\n}\r\n\r\nInterface.getInstallMode {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getinstallmode.tcl\r\n  INFO {Liefert die Restzeit, f\u00fcr die der Anlernmodus noch aktiv ist}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.getKeyMissmatchDevice {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getkeymissmatchdevice.tcl\r\n  INFO {Liefert die Seriennummer des letzten Ger\u00e4tes, welches nicht angelernt werden konnte}\r\n  ARGUMENTS {_session_id_ interface reset}\r\n}\r\n\r\nInterface.getLinkInfo {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getlinkinfo.tcl\r\n  INFO {Liefert den Namen und die Beschreibung einer direkten Verkn\u00fcpfung}\r\n  ARGUMENTS {_session_id_ interface senderAddress receiverAddress}\r\n}\r\n\r\nInterface.getLinkPeers {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getlinkpeers.tcl\r\n  INFO {Liefert alle Kommukationspartner eines Ger\u00e4ts}\r\n  ARGUMENTS {_session_id_ interface address}\r\n}\r\n\r\nInterface.getLinks {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getlinks.tcl\r\n  INFO {Liefert f\u00fcr ein Ger\u00e4t oder einen Kanal alle dirketen Verkn\u00fcpfungen}\r\n  ARGUMENTS {_session_id_ interface address flags}\r\n}\r\n\r\nInterface.getLogLevel {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getloglevel.tcl\r\n  INFO {Liefert die aktuelle Stufe der Fehlerprotokollierung}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.getParamset {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getparamset.tcl\r\n  INFO {Liefert ein komplettes Parameterset}\r\n  ARGUMENTS {_session_id_ interface address paramsetKey}\r\n}\r\n\r\nInterface.getParamsetDescription {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getparamsetdescription.tcl\r\n  INFO {Liefert die Beschreibung eines Parametersets}\r\n  ARGUMENTS {_session_id_ interface address paramsetKey}\r\n}\r\n\r\nInterface.getParamsetId {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getparamsetid.tcl\r\n  INFO {Liefert die Id eines Parametersets}\r\n  ARGUMENTS {_session_id_ interface address paramsetType}\r\n}\r\n\r\nInterface.getMasterValue {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getmastervalue.tcl\r\n  INFO {Liefert den Wert eines Parameters aus dem Parameterset \"MASTER\"}\r\n  ARGUMENTS {_session_id_ interface address valueKey}\r\n}\r\n\r\nInterface.getServiceMessageCount {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getservicemessagecount.tcl\r\n  INFO {Liefert die Anzahl der aktiven Servicemeldungen}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.getValue {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getvalue.tcl\r\n  INFO {Liefert den Wert eines Parameters aus dem Parameterset \"Values\"}\r\n  ARGUMENTS {_session_id_ interface address valueKey}\r\n}\r\n\r\nInterface.init {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/init.tcl\r\n  INFO {Meldet eine Logikschicht bei einer Schnittstelle an}\r\n  ARGUMENTS {_session_id_ interface url interfaceId}\r\n}\r\n\r\nInterface.isPresent {\r\n  LEVEL NONE\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/ispresent.tcl\r\n  INFO {Pr\u00fcft, ob der Dienst der betreffenden Schnittstelle l\u00e4uft)}\r\n  ARGUMENTS {interface}\r\n}\r\n\r\nInterface.listDevices {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/listdevices.tcl\r\n  INFO {Liefert eine Liste aller angelernten Ger\u00e4te}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.listInterfaces {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/listinterfaces.tcl\r\n  INFO {Liefert eine Liste der verf\u00fcgbaren Schnittstellen}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nInterface.getLGWStatus {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getlgwstatus.tcl\r\n  INFO {Liefert den Status des BidCoS Wired Lan Gateways}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.getLGWConnectionStatus {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getlgwconnectionstatus.tcl\r\n  INFO {Liefert den Verbindungsstatus des BidCoS Wired Lan Gateways}\r\n  ARGUMENTS {_session_id_ interface serial}\r\n}\r\n\r\nInterface.listTeams {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/listteams.tcl\r\n  INFO {Liefert die Ger\u00e4tebeschreibungen aller Teams}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.putParamset {\r\n  LEVEL USER\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/putparamset.tcl\r\n  INFO {Schreibt ein komplettes Parameterset f\u00fcr ein Ger\u00e4t}\r\n  ARGUMENTS {_session_id_ interface address paramsetKey set}\r\n}\r\n\r\nInterface.putThermParamset {\r\n  LEVEL USER\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/putthermparamset.tcl\r\n  INFO {Schreibt den Partymode f\u00fcr einen Thermostaten}\r\n  ARGUMENTS {_session_id_ interface address set}\r\n}\r\n\r\nInterface.refreshDeployedDeviceFirmwareList {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/refreshDeployedDeviceFirmwareList.tcl\r\n  INFO {Aktualisiert die Geraete-Firmware-Liste}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.removeLink {\r\n  LEVEL ADMIN \r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/removelink.tcl\r\n  INFO {L\u00f6scht eine direkte Verkn\u00fcpfung}\r\n  ARGUMENTS {_session_id_ interface sender receiver}\r\n}\r\n\r\nInterface.reportValueUsage {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/reportvalueusage.tcl\r\n  INFO {Teilt der Schnittstelle mit, wie h\u00e4ufig die Logikschicht einen Wert verwendet}\r\n  ARGUMENTS {_session_id_ interface address valueId refCounter}\r\n}\r\n\r\nInterface.restoreConfigToDevice {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/restoreconfigtodevice.tcl\r\n  INFO {\u00dcbertr\u00e4gt alle Konfigurationsdaten erneut an ein Ger\u00e4t}\r\n  ARGUMENTS {_session_id_ interface address}\r\n}\r\n\r\nInterface.rssiInfo {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/rssiinfo.tcl\r\n  INFO {Liefert die Empfangsfeldst\u00e4rken der angeschlossenen Ger\u00e4te}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.searchDevices {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/searchdevices.tcl\r\n  INFO {Sucht auf dem Bus nach neuen Ger\u00e4te}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.setInstallModeHMIP {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/setinstallmodehmip.tcl\r\n  INFO {Aktiviert oder dekativiert den Anlernmodus}\r\n  ARGUMENTS {_session_id_ installMode interface on time address key keymode}\r\n}\r\n\r\nInterface.setLinkInfo {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/setlinkinfo.tcl\r\n  INFO {Legt den Namen und die Beschreibung einer direkten Verkn\u00fcpfung fest}\r\n  ARGUMENTS {_session_id_ interface sender receiver name description}\r\n}\r\n\r\nInterface.setLogLevel {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/setloglevel.tcl\r\n  INFO {Legt die Stufe der Fehlerprotokollierung fest}\r\n  ARGUMENTS {_session_id_ interface level}\r\n}\r\n\r\nInterface.setTeam {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/setteam.tcl\r\n  INFO {F\u00fcgt einem Team einen Kanal hinzu}\r\n  ARGUMENTS {_session_id_ inteface channelAddress teamAddress}\r\n}\r\n\r\nInterface.setTempKey {\r\n  LEVEL ADMIN \r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/settempkey.tcl\r\n  INFO {\u00c4ndert den tempor\u00e4ren AES-Schl\u00fcssel}\r\n  ARGUMENTS {_session_id_ interface passphrase}\r\n}\r\n\r\nInterface.setValue {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/setvalue.tcl\r\n  INFO {Setzt einen einzelnen Wert im Parameterset \"Values\"}\r\n  ARGUMENTS {_session_id_ interface address valueKey type value}\r\n}\r\n\r\nInterface.updateFirmware {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/updatefirmware.tcl\r\n  INFO {Aktualisiert die Firmware der angegebenen Ger\u00e4te}\r\n  ARGUMENTS {_session_id_ interface device}\r\n}\r\n\r\nInterface.changeDevice {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/changedevice.tcl\r\n  INFO {Tauscht ein Ger\u00e4t gegen ein anderes aus.}\r\n  ARGUMENTS {_session_id_ interface addressNewDevice addressOldDevice}\r\n}\r\n\r\nInterface.listBidcosInterfaces {\r\n  LEVEL USER\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/listbidcosinterfaces.tcl\r\n  INFO {Listet die verf\u00fcgbaren BidCoS-RF Interfaces auf}\r\n  ARGUMENTS {_session_id_ interface}\r\n}\r\n\r\nInterface.setBidcosInterface {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/setbidcosinterface.tcl\r\n  INFO {Ordnet ein Ger\u00e4te einem BidCoS-RF Interface zu}\r\n  ARGUMENTS {_session_id_ interface deviceId interfaceId roaming}\r\n}\r\n\r\nInterface.setMetadata {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/setmetadata.tcl\r\n  INFO {Setzt ein Metadatum zu einem Object}\r\n  ARGUMENTS {_session_id_ objectId dataId value}\r\n}\r\n\r\nInterface.getMetadata {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/getmetadata.tcl\r\n  INFO {Gibt ein Metadatum zu einem Object zur\u00fcck}\r\n  ARGUMENTS {_session_id_ objectId dataId}\r\n}\r\n\r\nInterface.setMetadata_crRFD {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/setmetadata_crRFD.tcl\r\n  INFO {Setzt ein Metadatum zu einem Object, welches vom crRFD gespeichert wird}\r\n  ARGUMENTS {_session_id_ interface objectId dataId value}\r\n}\r\n\r\nInterface.getMetadata_crRFD {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE interface/dispatch.tcl\r\n  METHOD_FILE interface/getmetadata_crRFD.tcl\r\n  INFO { Liest Metadaten eines Datenobjects, welche vom crRFD gespeichert wurden}\r\n  ARGUMENTS {_session_id_ interface objectId dataId}\r\n}\r\n\r\nInterface.removeMetadata {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface/removemetadata.tcl\r\n  INFO {Entfernt ein Metadatum eines Objects}\r\n  ARGUMENTS {_session_id_ objectId dataId}\r\n}\r\n\r\nReGa.isPresent {\r\n  LEVEL NONE\r\n  SCRIPT_FILE rega/ispresent.tcl\r\n  INFO {Pr\u00fcft, ob die Logikschicht (ReGa) aktiv ist}\r\n  ARGUMENTS {}\r\n}\r\n\r\nReGa.runScript {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE rega/runscript.tcl\r\n  INFO {F\u00fchrt ein HomeMatic Script aus}\r\n  ARGUMENTS {_session_id_ script}\r\n}\r\n\r\nReGa.getAllDatapoints {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE rega/getalldatapoints.tcl\r\n  INFO {Gibt eine List aller DPs inkl. Namen zur\u00fcck.}\r\n  ARGUMENTS {}\r\n}\r\n\r\nDevice.getNewDeviceCount {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device/getnewdevicecount.tcl\r\n  INFO {Liefert die Anzahl aller neuen Ger\u00e4te}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nDevice.listAll {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device/listall.tcl\r\n  INFO {Liefert die Ids aller fertig konfigurierten Ger\u00e4te}\r\n  ARGUMENTS {_session_id_}\r\n}\r\nDevice.listAllDetail {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device/listalldetail.tcl\r\n  INFO {Liefert die Detailinformationen aller fertig konfigurierten Ger\u00e4te}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nDevice.get {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device/get.tcl\r\n  INFO {Liefert Detailinformationen zu einem Ger\u00e4t}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nDevice.setName {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/setname.tcl\r\n  INFO {Legt den Namen des Ger\u00e4ts fest}\r\n  ARGUMENTS {_session_id_ id name}\r\n}\r\n\r\nDevice.getReGaIDByAddress {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/getregaidbyaddress.tcl\r\n  INFO {Ermittelt die ReGa-ID eines Ger\u00e4tes aufgrund der Seriennummer}\r\n  ARGUMENTS {_session_id_ address}\r\n}\r\n\r\nDevice.getRFAddressByAddress {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/getrfaddressbyaddress.tcl\r\n  INFO {Ermittelt die Funk-Addresse eines Ger\u00e4tes aufgrund der Seriennummer}\r\n  ARGUMENTS {_session_id_ address}\r\n}\r\n\r\nDevice.getRFAddressOfAllDevices {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/getrfaddressofalldevices.tcl\r\n  INFO {Ermittelt die Funkaddresse aller Ger\u00e4te}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nDevice.hasLinksOrPrograms {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/haslinksorprograms.tcl\r\n  INFO {Ermittelt, ob das Ger\u00e4t in direkten Verkn\u00fcpfungen oder Programmen verwendet wird}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\n\r\nDevice.hasPrograms {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/hasprograms.tcl\r\n  INFO {Ermittelt, ob das Ger\u00e4t Programmen verwendet wird}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nDevice.listProgramIds {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device/listprogramids.tcl\r\n  INFO {Liefert die Ids aller Programme, die mindestens einen Kanal des Ger\u00e4ts verwenden}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nDevice.setOperateGroupOnly {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/setoperategrouponly.tcl\r\n  INFO {Legt die Bedienbarkeit des Ger\u00e4ts fest}\r\n  ARGUMENTS {_session_id_ id mode}\r\n}\r\n\r\nDevice.startComTest {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device/startcomtest.tcl\r\n  INFO {Startet den Funktionstest f\u00fcr ein Ger\u00e4t}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nDevice.pollComTest {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device/pollcomtest.tcl\r\n  INFO {Pr\u00fcft, ob Ergebnisse f\u00fcr einen Funktionstest vorliegen}\r\n  ARGUMENTS {_session_id_ id testId}\r\n}\r\n\r\nDevice.setVisibility {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device/setvisibility.tcl\r\n  INFO {Legt fest, ob das Ger\u00e4t f\u00fcr normale Anwender sichtbar ist}\r\n  ARGUMENTS {_session_id_ id isVisible}\r\n}\r\n\r\nEvent.subscribe {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE event/subscribe.tcl\r\n  INFO {Anmeldung f\u00fcr Ereignisbenachrichtigungen}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nEvent.unsubscribe {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE event/unsubscribe.tcl\r\n  INFO {Abmeldung f\u00fcr Ereignisbenachrichtigungen}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nEvent.poll {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE event/poll.tcl\r\n  INFO {Fragt Ereignisse ab}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nRoom.listAll {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE room/listall.tcl\r\n  INFO {Liefert eine Liste aller R\u00e4ume}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nRoom.getAll {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE room/getall.tcl\r\n  INFO {Liefert Detailinformationen zu allen R\u00e4umen}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nRoom.get {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE room/get.tcl\r\n  INFO {Liefert Detailinfomationen zu einem Raum}\r\n  ARGUMENTS {_session_id_  id}\r\n}\r\n\r\nRoom.listProgramIds {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE room/listprogramids.tcl\r\n  INFO {Liefert die Ids aller Programme, die mindestens einen Kanal in dem Raum verwenden}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nRoom.addChannel {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE room/addchannel.tcl\r\n  INFO {F\u00fcgt einen Kanal zu einem Raum hinzu}\r\n  ARGUMENTS {_session_id_ id channelId}\r\n}\r\n\r\nRoom.removeChannel {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE room/removechannel.tcl\r\n  INFO {Entfernt einen Kanal aus einem Raum}\r\n  ARGUMENTS {_session_id_ id channelId}\r\n}\r\n\r\nSubsection.listAll {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection/listall.tcl\r\n  INFO {Liefert eine Liste aller Gewerke}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nSubsection.getAll {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection/getall.tcl\r\n  INFO {Liefert Detailinformationen zu allen Gewerken}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nSubsection.get {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection/get.tcl\r\n  INFO {Liefert Detailinformationen zu einem Gewerk}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nSubsection.listProgramIds {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection/listprogramids.tcl\r\n  INFO {Liefert die Ids aller Programme, die mindesten einen Kanal in dem Raum verwenden}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nSubsection.addChannel {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE subsection/addchannel.tcl\r\n  INFO {F\u00fcgt dem Gewerk einen Kanal hinzu}\r\n  ARGUMENTS {_session_id_ id channelId}\r\n}\r\n\r\nSubsection.removeChannel {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE subsection/removechannel.tcl\r\n  INFO {Entfernt einen Kanal aus einem Gewerk}\r\n  ARGUMENTS {_session_id_ id channelId}\r\n}\r\n\r\nChannel.listProgramIds {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE channel/listprogramids.tcl\r\n  INFO {Liefert die Ids aller Programme, in denen der Kanal verwendet wird}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nChannel.hasProgramIds {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE channel/hasprogramids.tcl\r\n  INFO {Pr\u00fcft, ob der Kanal in Programmen verwendet wird}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nChannel.setName {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel/setname.tcl\r\n  INFO {Legt den Namen des Kanals fest}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nChannel.getName {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel/getname.tcl\r\n  INFO {Liefert den Namen des Kanals}\r\n  ARGUMENTS {_session_id_ address}\r\n}\r\nChannel.getValue {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel/getvalue.tcl\r\n  INFO {Liefert den Wert des Kanals}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\nChannel.setUsability {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel/setusability.tcl\r\n  INFO {Legt fest, ob der Kanal f\u00fcr normale Anwender bedienbar}\r\n  ARGUMENTS {_session_id_ id isUsable}\r\n}\r\n\r\nChannel.setVisibility {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel/setvisibility.tcl\r\n  INFO {Legt fest, ob der Kanal f\u00fcr normale Anwender sichtbar ist}\r\n  ARGUMENTS {_session_id_ id isVisible}\r\n}\r\n\r\nChannel.setLogging {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel/setlogging.tcl\r\n  INFO {Aktiviert bzw. deaktiviert die Protokollierung des Kanals}\r\n  ARGUMENTS {_session_id_ id isLogged}\r\n}\r\n\r\nChannel.setMode {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel/setmode.tcl\r\n  INFO {Legt den \u00dcbertragungs-Modus (Standard oder Gesichert (AES)) des Kanals fest}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nChannel.startComTest {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE channel/startcomtest.tcl\r\n  INFO {Startet den Funktionstest f\u00fcr den Kanal}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nChannel.pollComTest {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE channel/pollcomtest.tcl\r\n  INFO {Fragt das Ergebnis eines laufenden Funktionstests ab}\r\n  ARGUMENTS {_session_id_ id testId}\r\n}\r\n\r\nSession.login {\r\n  LEVEL NONE\r\n  SCRIPT_FILE session/login.tcl\r\n  INFO {F\u00fchrt die Benutzeranmeldung durch}\r\n  ARGUMENTS {username password}\r\n}\r\n\r\nSession.logout {\r\n  LEVEL NONE\r\n  SCRIPT_FILE session/logout.tcl\r\n  INFO {Beendet eine Sitzung}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nSession.renew {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE session/renew.tcl\r\n  INFO {Erneuert die Sitzung; Falls eine Sitzung nicht rechtzeitig erneuert wird, l\u00e4uft diese ab}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nSession.setSessionVar {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE session/setsessionvar.tcl\r\n  INFO {Setzt eine Session Variable}\r\n  ARGUMENTS {var val}\r\n}\r\n\r\nProgram.getAll {\r\n  LEVEL USER\r\n  SCRIPT_FILE program/getall.tcl\r\n  INFO {Liefert Detailinformationen zu allen Programmen auf der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nProgram.get {\r\n  LEVEL USER\r\n  SCRIPT_FILE program/get.tcl\r\n  INFO {Liefert Detailinformationen zu einem Programm auf der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nProgram.execute {\r\n  LEVEL USER\r\n  SCRIPT_FILE program/execute.tcl\r\n  INFO {F\u00fchrt ein Programm auf der HomeMatic Zentrale aus}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nProgram.deleteProgramByName {\r\n  LEVEL USER\r\n  SCRIPT_FILE program/deleteprogrambyname.tcl\r\n  INFO {L\u00f6scht ein Programm mit bestimmten Namen}\r\n  ARGUMENTS {_session_id_ name}\r\n}\r\n\r\nSysVar.getAll {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/getall.tcl\r\n  INFO {Liefert Detailinformationen zu allen Systemvariablen auf der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nSysVar.get {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/get.tcl\r\n  INFO {Liefert Detailinformationen zu einer Systemvariable auf der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\n\r\nSysVar.getValue {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/getvalue.tcl\r\n  INFO {Liefert den aktuellen Wert einer Systemvariable}\r\n  ARGUMENTS {_session_id_ id}\r\n}\r\nSysVar.getValueByName {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/getvaluebyname.tcl\r\n  INFO {Liefert den aktuellen Wert einer Systemvariable}\r\n  ARGUMENTS {_session_id_ name}\r\n}\r\nSysVar.createBool {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/createbool.tcl\r\n  INFO {Erzeugt eine Systemvariable vom Typ bool}\r\n  ARGUMENTS {_session_id_ name init_val internal chnID}\r\n}\r\nSysVar.setBool {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/setbool.tcl\r\n  INFO {Setzt den Wert einer Systemvariable vom Type bool}\r\n  ARGUMENTS {_session_id_ name value}\r\n}\r\nSysVar.createFloat {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/createfloat.tcl\r\n  INFO {Erzeugt eine Systemvariable vom Typ Number}\r\n  ARGUMENTS {_session_id_ name minValue maxValue internal chnID}\r\n}\r\nSysVar.setFloat {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/setfloat.tcl\r\n  INFO {Setzt den Wert einer Systemvariable vom Type float}\r\n  ARGUMENTS {_session_id_ name value}\r\n}\r\n\r\nSysVar.createEnum {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/createenum.tcl\r\n  INFO {Erzeugt eine Systemvariable vom Typ enum}\r\n  ARGUMENTS {_session_id_ name valList internal chnID}\r\n}\r\n\r\nSysVar.setEnum {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/setenum.tcl\r\n  INFO {Setzt den Wert einer Systemvariable vom Typ enum}\r\n  ARGUMENTS {_session_id_ name valueList}\r\n}\r\n\r\nSysVar.deleteSysVarByName {\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar/deletesysvarbyname.tcl\r\n  INFO {Entfernt eine Systemvariable mit bestimmten Namen}\r\n  ARGUMENTS {_session_id_ name}\r\n}\r\nBidCoS_RF.getConfigurationRF {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf/getconfiguration-rf.tcl\r\n  INFO {Liefert die aktuelle Konfiguration des BidCoS-RF Dienstes}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nBidCoS_RF.setConfigurationRF {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf/setconfiguration-rf.tcl\r\n  INFO {Setzt die Konfiguration des BidCoS-RF Dienstes}\r\n  ARGUMENTS {_session_id_ interfaces}\r\n}\r\n\r\nBidCoS_RF.createKeyFile {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf/createkeyfile.tcl\r\n  INFO {Generiert die Datei /etc/config/keys}\r\n  ARGUMENTS {_session_id_ key}\r\n}\r\n\r\nBidCoS_RF.isKeySet {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf/iskeyset.tcl\r\n  INFO {Ermittelt, ob ein Systemsicherheitsschl\u00fcssel im ARM7 gesetzt ist}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nBidCoS_RF.validateKey {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf/validatekey.tcl\r\n  INFO {Pr\u00fcft, ob der angegebe Schl\u00fcssel dem System-Sicherheitsschl\u00fcssel entspricht}\r\n  ARGUMENTS {_session_id_ key}\r\n}\r\n\r\nFirewall.getConfiguration {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE firewall/getconfiguration.tcl\r\n  INFO {Liefert die aktuelle Konfiguration der Firewall}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nFirewall.setConfiguration {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE firewall/setconfiguration.tcl\r\n  INFO {Setzt die Konfiguration der Firewall}\r\n  ARGUMENTS {_session_id_ services ips userports mode}\r\n}\r\n\r\nWebUI.getColors {\r\n  LEVEL NONE\r\n  SCRIPT_FILE webui/getcolors.tcl\r\n  INFO {Liefert die Systemfarben der HomeMatic WebUI}\r\n  ARGUMENTS { }\r\n}\r\n\r\nSafeMode.enter {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE safemode/enter.tcl\r\n  INFO {Startet die HomeMatic Zentrale im angesicherten Modus}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.getSecurityLevel {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getsecuritylevel.tcl\r\n  INFO {Liefert die gew\u00e4hlte Sicherheitsstufe}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.setSecurityLevel {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setsecuritylevel.tcl\r\n  INFO {Setzt die gew\u00e4hlte Sicherheitsstufe}\r\n  ARGUMENTS {_session_id_ level}\r\n}\r\n\r\nCCU.getSerial {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getserial.tcl\r\n  INFO {Liefert die Seriennummer der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.getAddress {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getaddress.tcl\r\n  INFO {Liefert die Adresse der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.getVersion {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getversion.tcl\r\n  INFO {Liefert die Firmware-Version der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_}\r\n}\r\nCCU.setSSH {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setssh.tcl\r\n  INFO {Aktiviert oder. deaktiviert den SSH-Zugang der HomeMatic Zentrale}\r\n  ARGUMENTS {_session_id_ mode}\r\n}\r\nCCU.getSSHState {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getsshstate.tcl\r\n  INFO {Liefert den Zustand des SSH-Zugangs der HomeMatic Zentrale (aktiviert oder deaktiviert)}\r\n  ARGUMENTS {_session_id_}\r\n}\r\nCCU.setSSHPassword {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setsshpassword.tcl\r\n  INFO {Setzt das Passwort f\u00fcr den SSH-Zugang}\r\n  ARGUMENTS {_session_id_ passwd}\r\n}\r\n\r\nCCU.setSecurityHint {\r\n  LEVEL USER\r\n  SCRIPT_FILE ccu/setsecurityhint.tcl\r\n  INFO {Legt die Datei /etc/config/userAckSecurityHint an}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.setUserAckInstallWizard {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE ccu/setuserackinstallwizard.tcl\r\n  INFO {Legt die Datei/etc/config/userprofiles/userAckInstallWizard_USERNAME an}\r\n  ARGUMENTS {_session_id_ userName}\r\n}\r\n\r\nCCU.setFirewallConfigured {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setfirewallconfigured.tcl\r\n  INFO {Legt die Datei /etc/config/firewallConfigured an}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.restartSSHDaemon {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/restartsshdaemon.tcl\r\n  INFO {Restartet den SSH-Daemon}\r\n  ARGUMENTS {_session_id_}\r\n}\r\nCCU.hideStickyUnreach {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setstickyunreach.tcl\r\n  INFO {Aktiviert oder. deaktiviert die Sichtbarkeit der STICKY-UNREACH Servicemeldungen}\r\n  ARGUMENTS {_session_id_ mode}\r\n}\r\nCCU.getStickyUnreachState {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getstickyunreachstate.tcl\r\n  INFO {Pr\u00fcft, ob die Datei /etc/config/hideStickyUnreach vorhanden ist}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.createFile {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE ccu/createfile.tcl\r\n  INFO {Legt eine Datei an, der Pfad muss mit angegeben werden}\r\n  ARGUMENTS {_session_id_ file}\r\n}\r\n\r\nCCU.existsFile {\r\n  LEVEL GUEST\r\n  SCRIPT_FILE ccu/existsfile.tcl\r\n  INFO {Pr\u00fcft, ob eine Datei oder ein Verzeichniss vorhanden ist}\r\n  ARGUMENTS {_session_id_ file}\r\n}\r\n\r\nCCU.getAuthEnabled {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getauthenabled.tcl\r\n  INFO {Pr\u00fcft, ob die Datei /etc/config/authEnabled vorhanden ist}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.setAuthEnabled {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setauthenabled.tcl\r\n  INFO {Aktiviert/deaktiviert Dienst Authentifizierung. Argument enabled darf 0 (deaktiviert) oder 1 (aktiviert) annehmen.}\r\n  ARGUMENTS {_session_id_ enabled}\r\n}\r\n\r\nCCU.getInfoLedConfig {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getinfoledconfig.tcl\r\n  INFO {Gibt die Konfiguration der Info LED zurueck (Signalisierung von Service- und Alarm Nachrichten).}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.setInfoLedConfig {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setinfoledconfig.tcl\r\n  INFO {Setzt die Konfiguration der Info LED zurueck (Signalisierung von Service- und Alarm Nachrichten).}\r\n  ARGUMENTS {_session_id_ serviceLedOn alarmLedOn}\r\n}\r\n\r\nCCU.getSNMPEnabled {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/getsnmpenabled.tcl\r\n  INFO {Gibt zur\u00fcck, ob SNMP konfiguriert/aktiviert wurde.}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nCCU.setSNMPEnabled {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu/setsnmpenabled.tcl\r\n  INFO {Konfiguriert/Aktivert oder Deaktiviert SNMP.}\r\n  ARGUMENTS {_session_id_ enabled usr pass}\r\n}\r\n\r\nBidCoS_Wired.getConfigurationWired {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcoswired/getconfiguration-wired.tcl\r\n  INFO {Liefert die aktuelle Konfiguration des BidCoS-Wired Dienstes}\r\n  ARGUMENTS {_session_id_}\r\n}\r\n\r\nBidCoS_Wired.setConfigurationWired {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcoswired/setconfiguration-wired.tcl\r\n  INFO {Setzt die Konfiguration des BidCoS-Wired Dienstes}\r\n  ARGUMENTS {_session_id_ interfaces}\r\n}\r\nBidCoS.changeLanGatewayKey {\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcos/changeLanGatewayKey.tcl\r\n  INFO {Bereitet das Setzen eines LAN Gateway Schl\u00fcssels vor.}\r\n  ARGUMENTS {_session_id_ lgwclass lgwserial lgwip newkey curkey}\r\n}\r\nUser.getUserFirstName {\r\n        LEVEL USER\r\n        SCRIPT_FILE user/getuserfirstname.tcl\r\n        INFO {Gibt den Username zur\u00fcck}\r\n        ARGUMENTS {_session_id_ userID}\r\n}\r\n\r\nUser.getUserName {\r\n        LEVEL USER\r\n        SCRIPT_FILE user/getusername.tcl\r\n        INFO {Gibt den Username zur\u00fcck}\r\n        ARGUMENTS {_session_id_ userID}\r\n}\r\n\r\nUser.hasUserPWD {\r\n        LEVEL USER\r\n        SCRIPT_FILE user/hasuserpwd.tcl\r\n        INFO {Gibt true zurueck, wenn fuer den Benutzer ein Passwort gesetzt ist, sonst false.}\r\n        ARGUMENTS {_session_id_ userID}\r\n}\r\n\r\nUser.isNoExpert {\r\n        LEVEL USER\r\n        SCRIPT_FILE user/isnoexpert.tcl\r\n        INFO {Ermittelt, ob ein Benutzer Experte ist}\r\n        ARGUMENTS {_session_id_ id}\r\n}\r\nUser.getLanguage {\r\n        LEVEL USER\r\n        SCRIPT_FILE user/getlanguage.tcl\r\n        INFO {Ermittelt die gew\u00e4hlte Sprache des Benutzers}\r\n        ARGUMENTS {_session_id_ userID}\r\n}\r\nUser.setLanguage {\r\n        LEVEL USER \r\n        SCRIPT_FILE user/setlanguage.tcl\r\n        INFO {Setzt die gew\u00e4hlte Sprache des Benutzers}\r\n        ARGUMENTS {_session_id_ userName userLang}\r\n}\r\n\r\nUser.getReGaVersion {\r\n        LEVEL NONE\r\n        SCRIPT_FILE user/getregaversion.tcl\r\n        INFO {Ermittelt die gew\u00e4hlte ReGaVersion}\r\n        ARGUMENTS {}\r\n}\r\n\r\nUser.setReGaVersion {\r\n        LEVEL USER\r\n        SCRIPT_FILE user/setregaversion.tcl\r\n        INFO {Speichert die gew\u00e4hlte ReGaVersion}\r\n        ARGUMENTS {_session_id_ ReGaVersion}\r\n}\r\n\r\nUser.existsCertificate {\r\n        LEVEL ADMIN\r\n        SCRIPT_FILE user/existscertificate.tcl\r\n        INFO {Pr\u00fcft, ob ein Zertifikat zur Verwendung von https vorhanden ist}\r\n        ARGUMENTS {_session_id_}\r\n}\r\n\r\nUser.deleteCertificate {\r\n        LEVEL ADMIN\r\n        SCRIPT_FILE user/deletecertificate.tcl\r\n        INFO {L\u00f6scht ein vorhandenes Zertifikat (server.pem) unter /etc/config}\r\n        ARGUMENTS {_session_id_}\r\n}\r\n\r\nUser.restartLighttpd {\r\n        LEVEL ADMIN\r\n        SCRIPT_FILE user/restartlighttpd.tcl\r\n        INFO {Restartet den lighttpd Webserver}\r\n        ARGUMENTS {_session_id_}\r\n}\r\n\r\nUser.restartHmIPServer {\r\n        LEVEL ADMIN\r\n        SCRIPT_FILE user/restarthmipserver.tcl\r\n        INFO {Restartet den HmIPServer}\r\n        ARGUMENTS {_session_id_}\r\n}\r\n\r\nUser.stopHmIPServer {\r\n        LEVEL ADMIN\r\n        SCRIPT_FILE user/stophmipserver.tcl\r\n        INFO {Stoppt den HmIPServer}\r\n        ARGUMENTS {_session_id_}\r\n}\r\n\r\nUser.startHmIPServer {\r\n        LEVEL ADMIN\r\n        SCRIPT_FILE user/starthmipserver.tcl\r\n        INFO {Startet den HmIPServer}\r\n        ARGUMENTS {_session_id_}\r\n}\r\n", "version": "1.1"}